{
  "pluginType": "JS",
  "pluginId": "js-plugin",
  "unpublishedAction": {
    "name": "grouping",
    "fullyQualifiedName": "tools.grouping",
    "datasource": {
      "name": "UNUSED_DATASOURCE",
      "pluginId": "js-plugin",
      "messages": [],
      "isAutoGenerated": false,
      "deleted": false,
      "policies": [],
      "userPermissions": []
    },
    "pageId": "Page1",
    "collectionId": "Page1_tools",
    "actionConfiguration": {
      "timeoutInMillisecond": 10000,
      "paginationType": "NONE",
      "encodeParamsToggle": true,
      "body": "(arr, tag, emptyTXT) => {\n  let data = arr.map(item => ({\n    source: item[tag]\n  }));\n  const unique_sources = [...new Set(data.map(item => item.source))];\n  let results = [];\n  unique_sources.forEach(source => {\n    let result = {\n      x: source != \"\" ? source : emptyTXT,\n      y: data.filter(item => item.source == source).length\n    };\n    results.push(result);\n  });\n  return results;\n}",
      "selfReferencingDataPaths": [],
      "jsArguments": [
        {},
        {},
        {}
      ],
      "isAsync": false
    },
    "executeOnLoad": false,
    "dynamicBindingPathList": [
      {
        "key": "body"
      }
    ],
    "isValid": true,
    "invalids": [],
    "messages": [],
    "jsonPathKeys": [
      "(arr, tag, emptyTXT) => {\n  let data = arr.map(item => ({\n    source: item[tag]\n  }));\n  const unique_sources = [...new Set(data.map(item => item.source))];\n  let results = [];\n  unique_sources.forEach(source => {\n    let result = {\n      x: source != \"\" ? source : emptyTXT,\n      y: data.filter(item => item.source == source).length\n    };\n    results.push(result);\n  });\n  return results;\n}"
    ],
    "userSetOnLoad": false,
    "confirmBeforeExecute": false,
    "policies": [],
    "userPermissions": []
  },
  "id": "Page1_tools.grouping",
  "deleted": false,
  "gitSyncId": "6368c9744bf5425741071baa_6368cafd4bf5425741071bc0"
}